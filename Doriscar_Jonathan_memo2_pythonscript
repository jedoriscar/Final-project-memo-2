{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "d3de2c7d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting google-api-python-client\n",
      "  Downloading google_api_python_client-2.90.0-py2.py3-none-any.whl (11.4 MB)\n",
      "Collecting httplib2<1.dev0,>=0.15.0\n",
      "  Downloading httplib2-0.22.0-py3-none-any.whl (96 kB)\n",
      "Collecting uritemplate<5,>=3.0.1\n",
      "  Downloading uritemplate-4.1.1-py2.py3-none-any.whl (10 kB)\n",
      "Collecting google-api-core!=2.0.*,!=2.1.*,!=2.2.*,!=2.3.0,<3.0.0.dev0,>=1.31.5\n",
      "  Downloading google_api_core-2.11.1-py3-none-any.whl (120 kB)\n",
      "Collecting google-auth<3.0.0.dev0,>=1.19.0\n",
      "  Downloading google_auth-2.21.0-py2.py3-none-any.whl (182 kB)\n",
      "Collecting google-auth-httplib2>=0.1.0\n",
      "  Downloading google_auth_httplib2-0.1.0-py2.py3-none-any.whl (9.3 kB)\n",
      "Collecting protobuf!=3.20.0,!=3.20.1,!=4.21.0,!=4.21.1,!=4.21.2,!=4.21.3,!=4.21.4,!=4.21.5,<5.0.0.dev0,>=3.19.5\n",
      "  Downloading protobuf-4.23.3-cp39-cp39-win_amd64.whl (422 kB)\n",
      "Collecting googleapis-common-protos<2.0.dev0,>=1.56.2\n",
      "  Downloading googleapis_common_protos-1.59.1-py2.py3-none-any.whl (224 kB)\n",
      "Requirement already satisfied: requests<3.0.0.dev0,>=2.18.0 in c:\\users\\doris\\anaconda3\\lib\\site-packages (from google-api-core!=2.0.*,!=2.1.*,!=2.2.*,!=2.3.0,<3.0.0.dev0,>=1.31.5->google-api-python-client) (2.26.0)\n",
      "Requirement already satisfied: urllib3<2.0 in c:\\users\\doris\\anaconda3\\lib\\site-packages (from google-auth<3.0.0.dev0,>=1.19.0->google-api-python-client) (1.26.7)\n",
      "Collecting rsa<5,>=3.1.4\n",
      "  Downloading rsa-4.9-py3-none-any.whl (34 kB)\n",
      "Requirement already satisfied: six>=1.9.0 in c:\\users\\doris\\anaconda3\\lib\\site-packages (from google-auth<3.0.0.dev0,>=1.19.0->google-api-python-client) (1.16.0)\n",
      "Collecting pyasn1-modules>=0.2.1\n",
      "  Downloading pyasn1_modules-0.3.0-py2.py3-none-any.whl (181 kB)\n",
      "Requirement already satisfied: cachetools<6.0,>=2.0.0 in c:\\users\\doris\\anaconda3\\lib\\site-packages (from google-auth<3.0.0.dev0,>=1.19.0->google-api-python-client) (5.0.0)\n",
      "Requirement already satisfied: pyparsing!=3.0.0,!=3.0.1,!=3.0.2,!=3.0.3,<4,>=2.4.2 in c:\\users\\doris\\anaconda3\\lib\\site-packages (from httplib2<1.dev0,>=0.15.0->google-api-python-client) (3.0.4)\n",
      "Collecting pyasn1<0.6.0,>=0.4.6\n",
      "  Downloading pyasn1-0.5.0-py2.py3-none-any.whl (83 kB)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in c:\\users\\doris\\anaconda3\\lib\\site-packages (from requests<3.0.0.dev0,>=2.18.0->google-api-core!=2.0.*,!=2.1.*,!=2.2.*,!=2.3.0,<3.0.0.dev0,>=1.31.5->google-api-python-client) (2021.10.8)\n",
      "Requirement already satisfied: idna<4,>=2.5 in c:\\users\\doris\\anaconda3\\lib\\site-packages (from requests<3.0.0.dev0,>=2.18.0->google-api-core!=2.0.*,!=2.1.*,!=2.2.*,!=2.3.0,<3.0.0.dev0,>=1.31.5->google-api-python-client) (3.2)\n",
      "Requirement already satisfied: charset-normalizer~=2.0.0 in c:\\users\\doris\\anaconda3\\lib\\site-packages (from requests<3.0.0.dev0,>=2.18.0->google-api-core!=2.0.*,!=2.1.*,!=2.2.*,!=2.3.0,<3.0.0.dev0,>=1.31.5->google-api-python-client) (2.0.4)\n",
      "Installing collected packages: pyasn1, rsa, pyasn1-modules, protobuf, httplib2, googleapis-common-protos, google-auth, uritemplate, google-auth-httplib2, google-api-core, google-api-python-client\n",
      "Successfully installed google-api-core-2.11.1 google-api-python-client-2.90.0 google-auth-2.21.0 google-auth-httplib2-0.1.0 googleapis-common-protos-1.59.1 httplib2-0.22.0 protobuf-4.23.3 pyasn1-0.5.0 pyasn1-modules-0.3.0 rsa-4.9 uritemplate-4.1.1\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install google-api-python-client"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "c2cc01b5",
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "from googleapiclient.discovery import build"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "7ad85646",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Set up API credentials\n",
    "api_key = \"api key goes here\"  \n",
    "\n",
    "# Create a YouTube API client\n",
    "youtube = build('youtube', 'v3', developerKey=api_key)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "702f86f5",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Specify the video ID\n",
    "video_id = \"kiSm0Nuqomg\"  # Replace with the video ID of desired video"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "0ee0cb96",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Call the API to retrieve video details\n",
    "response = youtube.videos().list(\n",
    "    part='snippet,statistics',\n",
    "    id=video_id\n",
    ").execute()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "33b1a786",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Video ID: kiSm0Nuqomg\n",
      "Title: Watch A Minute-To-Minute Breakdown Leading Up To George Floyd's Deadly Arrest | NBC News NOW\n",
      "Like Count: 39470\n",
      "View Count: 9499827\n",
      "Dislike Count: NA\n",
      "Comment Count: 12561\n",
      "Favorite Count: 0\n",
      "-------------------------\n"
     ]
    }
   ],
   "source": [
    "# Extract the video title, like count, view count, comments, and favorites\n",
    "video = response['items'][0]\n",
    "title = video['snippet']['title']\n",
    "like_count = video['statistics']['likeCount']\n",
    "view_count = video['statistics']['viewCount']\n",
    "comment_count = video['statistics']['commentCount']\n",
    "favorite_count = video['statistics']['favoriteCount']\n",
    "\n",
    "# Check if the 'dislikeCount' field exists\n",
    "if 'dislikeCount' in video['statistics']:\n",
    "    dislike_count = video['statistics']['dislikeCount']\n",
    "else:\n",
    "    dislike_count = \"NA\"\n",
    "\n",
    "# Print the video details\n",
    "print(\"Video ID:\", video_id)\n",
    "print(\"Title:\", title)\n",
    "print(\"Like Count:\", like_count)\n",
    "print(\"View Count:\", view_count)\n",
    "print(\"Dislike Count:\", dislike_count)\n",
    "print(\"Comment Count:\", comment_count)\n",
    "print(\"Favorite Count:\", favorite_count)\n",
    "print(\"-------------------------\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "ad2b4f6d",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Call the API to retrieve video categories\n",
    "response = youtube.videoCategories().list(\n",
    "    part='snippet',\n",
    "    id=video['snippet']['categoryId']\n",
    ").execute()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "ddab5ef8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Category: News & Politics\n",
      "-------------------------\n"
     ]
    }
   ],
   "source": [
    "# Extract the video category\n",
    "category = response['items'][0]['snippet']['title']\n",
    "print(\"Category:\", category)\n",
    "print(\"-------------------------\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "1c235d30",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Call the API to retrieve related videos\n",
    "response = youtube.search().list(\n",
    "    part='snippet',\n",
    "    relatedToVideoId=video_id,\n",
    "    type='video',\n",
    "    maxResults=5  # You can adjust this value to retrieve more related videos\n",
    ").execute()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "fb68eb58",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Related Videos:\n",
      "Inside the Store That Called Police on George Floyd\n",
      "Derek Chauvin found guilty of George Floyd murder - moment the verdicts were delivered | ITV News\n",
      "'Ghost Boy' Survives Over A Decade Trapped In His Body | NBC Nightly News\n",
      "Live PD: Most Viewed Moments from Jeffersonville, Indiana Police Department | A&E\n",
      "Donald Williams testifies on the second day of the Derek Chauvin trial\n",
      "-------------------------\n"
     ]
    }
   ],
   "source": [
    "# Extract the related videos\n",
    "related_videos = response['items']\n",
    "print(\"Related Videos:\")\n",
    "for related_video in related_videos:\n",
    "    print(related_video['snippet']['title'])\n",
    "print(\"-------------------------\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "c745a378",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Call the API to retrieve channel details\n",
    "channel_id = video['snippet']['channelId']\n",
    "response = youtube.channels().list(\n",
    "    part='snippet,statistics',\n",
    "    id=channel_id\n",
    ").execute()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "d2037c5f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Channel Name: NBC News\n",
      "Subscriber Count: 8060000\n"
     ]
    }
   ],
   "source": [
    "# Extract the channel details\n",
    "channel = response['items'][0]\n",
    "channel_name = channel['snippet']['title']\n",
    "subscriber_count = channel['statistics']['subscriberCount']\n",
    "\n",
    "# Print the channel details\n",
    "print(\"Channel Name:\", channel_name)\n",
    "print(\"Subscriber Count:\", subscriber_count)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "b7acd170",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Call the API to retrieve video comments\n",
    "response = youtube.commentThreads().list(\n",
    "    part='snippet',\n",
    "    videoId=video_id,\n",
    "    textFormat='plainText',\n",
    "    maxResults=100  # You can adjust this value to retrieve more comments\n",
    ").execute()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "646dba93",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Username: NBC News\n",
      "Comment: Correction: This video has been updated with the latest cell phone footage and has been corrected to accurately represent street names and the location of the black vehicle.\n",
      "Likes: 1464\n",
      "-------------------------\n",
      "Username: Jalayha’s World💙\n",
      "Comment: He was the only one that made our world right Rest In Peace George. ❤\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: England Ferocious\n",
      "Comment: USA AND NATO are super killers RUSSIA AND CHINA WILL BOOMB THEM ALL\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: yorok 426\n",
      "Comment: He can't breed 🤣🤣🤣\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: Law Dawg T.I.M.B\n",
      "Comment: I only want ask one question was it's just  only white people's ?? on him or was there a man of color around cuz if it was them foul guy is a Uncle Tom but in the slave days Uncle Tom was good dude. Remember that told you this about slave and they didn't want you to learn something about it and if something had happen  on the plantation uncle Tom with tell them you need to hide\n",
      "Likes: 1\n",
      "-------------------------\n",
      "Username: Richard\n",
      "Comment: Sorry George floyed was high in fetnol he was a addict thats what killed him hecwas complaining that he couldn't breath before the incident stop putting this down to race\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: DAN theMan\n",
      "Comment: He ODed on copium\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: VoLcaNo\n",
      "Comment: America the land of freedom and justice 😂😂😂\n",
      "Likes: 1\n",
      "-------------------------\n",
      "Username: Cyborg\n",
      "Comment: If your Black, you will attack.\n",
      "Likes: 1\n",
      "-------------------------\n",
      "Username: Dumpster Fetus\n",
      "Comment: Why don't they show the body cam footage of him on the ground?\n",
      "Likes: 1\n",
      "-------------------------\n",
      "Username: M\n",
      "Comment: Had he obeyed he may still be alive.\n",
      "Likes: 1\n",
      "-------------------------\n",
      "Username: VIGHNESH KOALAPUNANI\n",
      "Comment: George Floyd: I CANT BREATH, I CANT BREATH\n",
      "Spiderman 2099: bro its a canon event\n",
      "Likes: 1\n",
      "-------------------------\n",
      "Username: Brian Adams\n",
      "Comment: Do the COUNTLESS murders of whites by blacks make you feel any better?  Floyd was garbage.  Nobody really give a sheet.\n",
      "Likes: 1\n",
      "-------------------------\n",
      "Username: Holly B\n",
      "Comment: y he do da\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: MrTefe\n",
      "Comment: this sucks cuz it gave black ppl rights and now u cant even be a little racist without some 14 year old girl saying RaCiSt\n",
      "Likes: 2\n",
      "-------------------------\n",
      "Username: samthathesavage2012\n",
      "Comment: I can somewhat justified the officers actions in this situation because the thug was high on pot He had pot in him and pot can cause rage and anger these democrats are so sensitive\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: Exo Locke\n",
      "Comment: So why does the license plate say police??????? At the end of the video.  Yeah the whole thing is an inside job.\n",
      "Likes: 1\n",
      "-------------------------\n",
      "Username: Flip Floopington\n",
      "Comment: Now that it's been released that he OD'd, are you going to retract this entire video?\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: 芒果皇帝\n",
      "Comment: devil at knees\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: Я бох Ты лох\n",
      "Comment: NarkoNig\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: noe castillo\n",
      "Comment: At 1:30 he drops a little baggie as he slides down the wall to sit down.\n",
      "Likes: 1\n",
      "-------------------------\n",
      "Username: Chiari Charlie\n",
      "Comment: Crack head was handled.\n",
      "Likes: 3\n",
      "-------------------------\n",
      "Username: DarkXSeries7\n",
      "Comment: rip bozo\n",
      "Likes: 4\n",
      "-------------------------\n",
      "Username: Fazer\n",
      "Comment: get those murders on death row bro, no bodycam and no cams, stuff in america is wild\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: Ass seeker Calooby\n",
      "Comment: I have to thank George Floyd for making me a racist and show the true face of black people, who chosed to riot the streets for a fentanyl addict, pregnant women assaulting criminal 🙏\n",
      "Likes: 3\n",
      "-------------------------\n",
      "Username: Damani\n",
      "Comment: Ya all got duped into burning your own city down ....Gave China more power 😭\n",
      "Likes: 2\n",
      "-------------------------\n",
      "Username: Jonathan Roberts\n",
      "Comment: Stupid cops doing it with everybody watching.\n",
      "Likes: 1\n",
      "-------------------------\n",
      "Username: George cortina\n",
      "Comment: He got what he got and saved the rest of us from paying for his food while  in jail. .\n",
      "Likes: 4\n",
      "-------------------------\n",
      "Username: Rina Tennoji\n",
      "Comment: the celebrated georgian floyd fish aka fentylus didundo is life long bottom feeder. they like to steal from pregnant fish and usually die from swallowing rocks\n",
      "Likes: 3\n",
      "-------------------------\n",
      "Username: Amazon Redhead\n",
      "Comment: Ya right both are crisis actors... Look up Grady Brown he has a fu*king acting award in his hand. 'George Floyd' was seen at his own funeral. Get real NBC, 'you' had a hand in pushing this bullsh*t agenda.\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: Isaiah Villalobos\n",
      "Comment: Only in Detroit 💀💀💀👱🏿\n",
      "Likes: 4\n",
      "-------------------------\n",
      "Username: Ian Curtisvision\n",
      "Comment: He was such a role model and a pillar in the community\n",
      "Likes: 2\n",
      "-------------------------\n",
      "Username: Zeppelinica\n",
      "Comment: Look at Floyd. \n",
      "😆😂😁🤣😅😁🤣\n",
      "Likes: 4\n",
      "-------------------------\n",
      "Username: Hoi4 Gamer \n",
      "Comment: This is so funni\n",
      "Likes: 3\n",
      "-------------------------\n",
      "Username: Łukasz Tobi\n",
      "Comment: Good job Derek 👍👏👏\n",
      "Likes: 4\n",
      "-------------------------\n",
      "Username: Mike Trejo\n",
      "Comment: Bro is praised because he passed away like that yes it’s sad but he was a bad person and deserved to be in prision he fought it and look what happend\n",
      "Likes: 3\n",
      "-------------------------\n",
      "Username: Centauri\n",
      "Comment: 🤣🤣\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: Mindriot91 _\n",
      "Comment: One down, about 5 trillion to go.\n",
      "Likes: 5\n",
      "-------------------------\n",
      "Username: George cortina\n",
      "Comment: lol\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: Edmund Loh\n",
      "Comment: To be fair, that criminal had it coming.\n",
      "Likes: 3\n",
      "-------------------------\n",
      "Username: castkuandy\n",
      "Comment: racist overload\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: Frank Gallagher\n",
      "Comment: franklin gtav\n",
      "Likes: 1\n",
      "-------------------------\n",
      "Username: I don't like you\n",
      "Comment: 😂😂😂 I can't sneeze\n",
      "Likes: 4\n",
      "-------------------------\n",
      "Username: Bill Shaker\n",
      "Comment: I Can't Sneed\n",
      "Likes: 1\n",
      "-------------------------\n",
      "Username: Bill Shaker\n",
      "Comment: I Can't Sneed\n",
      "Likes: 1\n",
      "-------------------------\n",
      "Username: Dakota edits\n",
      "Comment: You wish she was coming with you because she with me right now getting her Dooney’s clap\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: A L\n",
      "Comment: This was all fake . made on a green screen\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: RantzNTirades\n",
      "Comment: https://youtu.be/R92MhkXQpz4\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: benny\n",
      "Comment: smh, clearly was just a hologram projected by the deep state pigeon psy op robots\n",
      "Likes: 1\n",
      "-------------------------\n",
      "Username: 2 _\n",
      "Comment: Crazy that the cartel get away with an innocent murder yet this cop didn't just comes to show...\n",
      "Likes: 1\n",
      "-------------------------\n",
      "Username: Aqua\n",
      "Comment: this comment section is absolutely disgusting. the amount of people defending the officers is an unacceptably large amount.\n",
      "Likes: 1\n",
      "-------------------------\n",
      "Username: LILAC\n",
      "Comment: Rest in peace 🕊\n",
      "Likes: 4\n",
      "-------------------------\n",
      "Username: Chuntesh Chauhan\n",
      "Comment: In white majority neighborhood, non whites are not safe\n",
      "it clearly states how all whites are having criminal mentality and they did worst to us back in 1800's\n",
      "hope  whites suffer horrific consequences\n",
      "Likes: 1\n",
      "-------------------------\n",
      "Username: lll COBRO lll\n",
      "Comment: Eric Gardner moment 😢\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: Emma Reyes\n",
      "Comment: We need more police officers like this.\n",
      "Likes: 4\n",
      "-------------------------\n",
      "Username: Jote\n",
      "Comment: Sl😊😅😅😅eeping\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: Sam Tr\n",
      "Comment: A criminal becomes a symbol, what a mess of this society. Narrative pushing on social media really dangerous, big tech did good job\n",
      "Likes: 4\n",
      "-------------------------\n",
      "Username: PsychoGirlMagnet1216\n",
      "Comment: it's been 1,052 days\n",
      " since he had resisted arrest.\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: BEMYBUTTERCUP\n",
      "Comment: We should be well . Our family's should be well. See what happens when people, don't know how to maintain conroll.!\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: BEMYBUTTERCUP\n",
      "Comment: So I guess I'm the one you all been looking for well all I can say is I'm here still. And there's really knoting you can do to me that hasn't already have been done with , execution.  I say. What do you all think gorge floyd family.?.\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: Renoman63\n",
      "Comment: How can you use this guy as a person to represent our culture? He was a career criminal and never tried to turn his life around even to the end. He was the scum of all scums. Did anyone look at the toxicology report. He had almost every drug you could think of in his system. The Corrinor said he should have been dead long before he was arrested. Did he ever do anything good in his life?\r\n",
      "Shame on us for putting him on a pedestal!!!\n",
      "Likes: 6\n",
      "-------------------------\n",
      "Username: YouTubeBlocksComments\n",
      "Comment: He died of a drug overdose\n",
      "Likes: 2\n",
      "-------------------------\n",
      "Username: Lionel Messi\n",
      "Comment: This guy seems a nice dude. I think he is so nice he wouldn't put a gun on a pregnant women.\n",
      "Likes: 3\n",
      "-------------------------\n",
      "Username: Ty Na\n",
      "Comment: “I can’t breath” “momma” 💔senseless\n",
      "Likes: 12\n",
      "-------------------------\n",
      "Username: Charlie Smith\n",
      "Comment: And its already long forgotten\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: Callum Plays\n",
      "Comment: He resisted arrest\n",
      "Likes: 2\n",
      "-------------------------\n",
      "Username: 63 Ford\n",
      "Comment: NO RACISM  HERE IF ANYTHING MAYBE A  MANSLAUGHTER CHARGE.   MOST LIKELY  A DRUG OVERDOSE\n",
      "Likes: 2\n",
      "-------------------------\n",
      "Username: Werede Yigzaw \n",
      "Comment: This again see India America\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: ً\n",
      "Comment: this is breath taking\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: vadicuck007\n",
      "Comment: knee em\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: Timothy Currow\n",
      "Comment: This both engages and and scares me ‐ to watch and hear George Floyd reduced to a hysterical child crying out for his mother  to \"save him\" from  slowly  being suffocated to death sickens me....  Let us all never forget what happend on this day when the convicted murderer cop comes up for perole —\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: FrechoZ\n",
      "Comment: bunch of white kids in the comments thinking there funny\n",
      "Likes: 4\n",
      "-------------------------\n",
      "Username: Ginebro\n",
      "Comment: Great work by the officers, we need more like these\n",
      "Likes: 18\n",
      "-------------------------\n",
      "Username: Lez Barker\n",
      "Comment: This criminal died from fentanyl overdose the poor coppers did nothing wrong. I challenge anyone to sit their knee on the back of my neck and try and chock me it’s impossible\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: Hanna Rice\n",
      "Comment: Wouldn’t you just want to do the same thing to lowlife cops….psychopaths in uniform\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: brave one thanks\n",
      "Comment: Criminal that is what he was and who he is\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: Ghostface\n",
      "Comment: Most of you guys don’t even realize he was a crack head and he would’ve probably died from a overdose in the next year or so💀\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: Pickle Peanut\n",
      "Comment: Tempeny,puliski\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: Md Masum\n",
      "Comment: khan kir pola ra kivabey akta manus k mai ra falai loo\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: Mike Burgess\n",
      "Comment: I wish I had a time machine, so I could go back in time when George’s head was on the ground and ran up and stomped on it a couple of times.😂\n",
      "Likes: 5\n",
      "-------------------------\n",
      "Username: AndrewDoesYT\n",
      "Comment: wow I don't care but have a nice day\n",
      "Likes: 4\n",
      "-------------------------\n",
      "Username: CG Donut\n",
      "Comment: If George floyd was innocent so was bill cosby\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: Justin\n",
      "Comment: Ya act like he was innocent 🤦🏻‍♂️\n",
      "Likes: 2\n",
      "-------------------------\n",
      "Username: Lavale Owens\n",
      "Comment: 😂😂😂😂😂😂😅\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: Flat Earther\n",
      "Comment: 💦\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: edgelord\n",
      "Comment: There's neo nazis and skins heads in the police  stations\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: Paul Robinson\n",
      "Comment: One less POS\n",
      "Likes: 1\n",
      "-------------------------\n",
      "Username: Arpejio\n",
      "Comment: Good riddance.\n",
      "Likes: 1\n",
      "-------------------------\n",
      "Username: Ryan James Franklin\n",
      "Comment: https://youtu.be/zQFlFZ6nn9k\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: Rangda Rangda\n",
      "Comment: 8 minutes. 8 minutes. Dear God.\n",
      "Likes: 2\n",
      "-------------------------\n",
      "Username: neogextreme\n",
      "Comment: deserved. that man was a danger to society\n",
      "Likes: 5\n",
      "-------------------------\n",
      "Username: John knigt\n",
      "Comment: All it was is crack head he drugs in mouth it was no wrong doing for the cops did everything right that way the do white or black I so tired ol races stop that crap it nothing do with black need thank good the are not slaves anymore   get more then any white poor people  on fixed income strove to death cut food stamps can bye anything\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: ahsankhanes\n",
      "Comment: This COP should be paid off in their life once. Inshallah\n",
      "Likes: 0\n",
      "-------------------------\n",
      "Username: Steve Johnston\n",
      "Comment: Justice was not served. You cannot suffocate someone by kneeling on the back of their neck. It is impossible, the airway is protected by the cervical spine. The last 10 seconds of video clearly show the officer's knee on the back of his neck. At 3:22, George Floyd is face down, facing the parked car with the officers knee on the back of his neck. Watch any UFC fight, and you will see this a common and non-lethal means to control someone. The idea that this was 1st degree murder is false, and an absolute miscarriage of justice.\n",
      "Likes: 4\n",
      "-------------------------\n",
      "Username: m\n",
      "Comment: george was a terrible man\n",
      "Likes: 5\n",
      "-------------------------\n",
      "Username: Slug Naholowaa\n",
      "Comment: George is going through some mental breakdown and resist and fights with the officers.\n",
      "Likes: 1\n",
      "-------------------------\n",
      "Username: Adam Hester\n",
      "Comment: This guy was no saint ! Gtfo\n",
      "Likes: 3\n",
      "-------------------------\n",
      "Username: Melissa Rossi\n",
      "Comment: This is watching a murder unfold.\n",
      "Likes: 2\n",
      "-------------------------\n",
      "Username: Emerson Dave\n",
      "Comment: He was a POS, hooked on drugs.... nobody wants to say it, the way it was.\n",
      "Likes: 4\n",
      "-------------------------\n",
      "Username: J D\n",
      "Comment: officers did as they were trained. george had fentanyl in his blood which causes trouble breathing\n",
      "Likes: 2\n",
      "-------------------------\n"
     ]
    }
   ],
   "source": [
    "# Extract the comments with usernames and likes from the API response\n",
    "comments = []\n",
    "for item in response['items']:\n",
    "    comment = item['snippet']['topLevelComment']['snippet']['textDisplay']\n",
    "    username = item['snippet']['topLevelComment']['snippet']['authorDisplayName']\n",
    "    likes = item['snippet']['topLevelComment']['snippet']['likeCount']\n",
    "    comments.append((username, comment, likes))\n",
    "\n",
    "# Print the comments separated by user along with the number of likes\n",
    "for username, comment, likes in comments:\n",
    "    print(\"Username:\", username)\n",
    "    print(\"Comment:\", comment)\n",
    "    print(\"Likes:\", likes)\n",
    "    print(\"-------------------------\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "57059db2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Data exported to youtube_data.csv\n"
     ]
    }
   ],
   "source": [
    "import csv\n",
    "\n",
    "# Assuming you have the following data:\n",
    "# - title: Video title\n",
    "# - like_count: Number of video likes\n",
    "# - view_count: Number of video views\n",
    "# - comment_count: Number of video comments\n",
    "# - favorite_count: Number of video favorites\n",
    "# - dislike_count: Number of video dislikes (or \"NA\" if not available)\n",
    "# - category: Video category\n",
    "# - related_videos: List of related videos\n",
    "# - channel_name: Channel name\n",
    "# - subscriber_count: Number of channel subscribers\n",
    "# - comments: List of comments (each comment is a tuple of username, comment, and likes)\n",
    "\n",
    "# Create a list of dictionaries containing the data\n",
    "data = []\n",
    "for comment in comments:\n",
    "    data.append({\n",
    "        'username': comment[0],\n",
    "        'comment': comment[1],\n",
    "        'likes': comment[2],\n",
    "        'title': title,\n",
    "        'like_count': like_count,\n",
    "        'view_count': view_count,\n",
    "        'comment_count': comment_count,\n",
    "        'favorite_count': favorite_count,\n",
    "        'dislike_count': dislike_count,\n",
    "        'category': category,\n",
    "        'related_videos': related_videos,\n",
    "        'channel_name': channel_name,\n",
    "        'subscriber_count': subscriber_count\n",
    "    })\n",
    "\n",
    "# Specify the path and filename for the CSV file\n",
    "csv_filename = 'youtube_data.csv'\n",
    "\n",
    "# Write the data to the CSV file\n",
    "with open(csv_filename, 'w', newline='', encoding='utf-8') as csv_file:\n",
    "    fieldnames = ['username', 'comment', 'likes', 'title', 'like_count', 'view_count',\n",
    "                  'comment_count', 'favorite_count', 'dislike_count', 'category',\n",
    "                  'related_videos', 'channel_name', 'subscriber_count']\n",
    "    writer = csv.DictWriter(csv_file, fieldnames=fieldnames)\n",
    "    \n",
    "    # Write the header row\n",
    "    writer.writeheader()\n",
    "    \n",
    "    # Write the data rows\n",
    "    for row in data:\n",
    "        writer.writerow(row)\n",
    "\n",
    "print(\"Data exported to\", csv_filename)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "dbfca8ec",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Data exported to youtube_data12.csv\n"
     ]
    }
   ],
   "source": [
    "import csv\n",
    "import os\n",
    "import googleapiclient.discovery\n",
    "from datetime import datetime\n",
    "\n",
    "# Set up the YouTube Data API client\n",
    "api_service_name = \"youtube\"\n",
    "api_version = \"v3\"\n",
    "youtube = googleapiclient.discovery.build(api_service_name, api_version, developerKey=\"AIzaSyDUx6ksTMOX5PdEJccfUdRj5MsG_AcySYI\")\n",
    "\n",
    "# Specify the video IDs\n",
    "video_ids = [\"7Ooa7wOKHhg\", \"kiSm0Nuqomg\"]\n",
    "\n",
    "# Specify the path and filename for the CSV file\n",
    "csv_filename = \"youtube_data12.csv\"\n",
    "\n",
    "# Create a list to store the data\n",
    "data = []\n",
    "\n",
    "# Iterate over the video IDs\n",
    "for video_id in video_ids:\n",
    "    # Call the API to retrieve video details\n",
    "    video_response = youtube.videos().list(\n",
    "        part=\"snippet,statistics\",\n",
    "        id=video_id\n",
    "    ).execute()\n",
    "\n",
    "    # Extract the video details\n",
    "    video = video_response['items'][0]\n",
    "    title = video['snippet']['title']\n",
    "    like_count = video['statistics']['likeCount']\n",
    "    view_count = video['statistics']['viewCount']\n",
    "    comment_count = video['statistics']['commentCount']\n",
    "    favorite_count = video['statistics']['favoriteCount']\n",
    "    dislike_count = video['statistics'].get('dislikeCount', \"NA\")\n",
    "    published_at = video['snippet']['publishedAt']\n",
    "    \n",
    "    # Split the video published date into year, month, and day\n",
    "    video_published_date = datetime.strptime(published_at, \"%Y-%m-%dT%H:%M:%SZ\")\n",
    "    video_year = video_published_date.year\n",
    "    video_month = video_published_date.month\n",
    "    video_day = video_published_date.day\n",
    "\n",
    "    # Call the API to retrieve video comments\n",
    "    comments_response = youtube.commentThreads().list(\n",
    "        part='snippet',\n",
    "        videoId=video_id,\n",
    "        textFormat='plainText',\n",
    "        maxResults=100  # Adjust the value as needed\n",
    "    ).execute()\n",
    "\n",
    "    # Extract the comments\n",
    "    comments = []\n",
    "    for item in comments_response['items']:\n",
    "        comment = item['snippet']['topLevelComment']['snippet']['textDisplay']\n",
    "        username = item['snippet']['topLevelComment']['snippet']['authorDisplayName']\n",
    "        likes = item['snippet']['topLevelComment']['snippet']['likeCount']\n",
    "        comment_published_at = item['snippet']['topLevelComment']['snippet']['publishedAt']\n",
    "        \n",
    "        # Split the comment published date into year, month, and day\n",
    "        comment_published_date = datetime.strptime(comment_published_at, \"%Y-%m-%dT%H:%M:%SZ\")\n",
    "        comment_year = comment_published_date.year\n",
    "        comment_month = comment_published_date.month\n",
    "        comment_day = comment_published_date.day\n",
    "        \n",
    "        comments.append((username, comment, likes, comment_published_at, comment_year, comment_month, comment_day))\n",
    "\n",
    "    # Create a list of dictionaries containing the data\n",
    "    for comment in comments:\n",
    "        data.append({\n",
    "            'video_id': video_id,\n",
    "            'title': title,\n",
    "            'like_count': like_count,\n",
    "            'view_count': view_count,\n",
    "            'comment_count': comment_count,\n",
    "            'favorite_count': favorite_count,\n",
    "            'dislike_count': dislike_count,\n",
    "            'username': comment[0],\n",
    "            'comment': comment[1],\n",
    "            'likes': comment[2],\n",
    "            'comment_published_at': comment[3],\n",
    "            'comment_year': comment[4],\n",
    "            'comment_month': comment[5],\n",
    "            'comment_day': comment[6],\n",
    "            'video_published_at': published_at,\n",
    "            'video_year': video_year,\n",
    "            'video_month': video_month,\n",
    "            'video_day': video_day\n",
    "        })\n",
    "\n",
    "# Write the data to the CSV file\n",
    "file_exists = os.path.isfile(csv_filename)\n",
    "\n",
    "with open(csv_filename, 'a', newline='', encoding='utf-8') as csv_file:\n",
    "    fieldnames = ['video_id', 'title', 'like_count', 'view_count', 'comment_count',\n",
    "                  'favorite_count', 'dislike_count', 'username', 'comment', 'likes',\n",
    "                  'comment_published_at', 'comment_year', 'comment_month', 'comment_day',\n",
    "                  'video_published_at', 'video_year', 'video_month', 'video_day']\n",
    "    \n",
    "    writer = csv.DictWriter(csv_file, fieldnames=fieldnames)\n",
    "\n",
    "    # Write the header row if the file doesn't exist\n",
    "    if not file_exists:\n",
    "        writer.writeheader()\n",
    "\n",
    "    # Write the data rows\n",
    "    if data:  # Check if there is data to write\n",
    "        writer.writerows(data)\n",
    "\n",
    "print(\"Data exported to\", csv_filename)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
